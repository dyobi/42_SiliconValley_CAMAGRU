{"ast":null,"code":"var _jsxFileName = \"/Users/dyobi/Desktop/camagru/src/components/body/account/index.jsx\";\nimport React from 'react';\nimport nodemailer from 'nodemailer';\nimport { useDispatch } from 'react-redux';\nimport { ui_nav, acc_signin, acc_signup, acc_user, acc_mail } from '../../../actions';\nimport './index.css';\nimport axios from 'axios';\nimport { URL } from '../../../const';\n\nfunction BodyAccount() {\n  const dispatch = useDispatch();\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: '42sv.camagru@gmail.com',\n      pass: 'gusdk314'\n    }\n  });\n  const mailOptions = {\n    from: '42sv.camagru@gmail.com',\n    to: \"document.sign_in.id.value\",\n    subject: 'Please confirm this for camagru )',\n    text: 'That was easy!'\n  };\n  transporter.sendMail(mailOptions, function (error, info) {\n    if (error) {\n      console.log(error);\n    }\n  });\n\n  function handleform() {\n    if (document.signup.pwd.value === document.signup.repwd.value) {\n      axios.post(URL + 'signup', {\n        id: document.signup.id.value,\n        pwd: document.signup.pwd.value,\n        name: document.signup.name.value,\n        pn: document.signup.pn.value\n      }).then(res => {\n        console.log(res);\n\n        if (res.data) {\n          dispatch(acc_mail(document.signup.id.value.split('@')[1]));\n          dispatch(acc_signup(1));\n        } else {\n          alert('E-mail has already existed !');\n        }\n      });\n    } else {\n      alert('Password is not matched !');\n    }\n  }\n\n  function Valid_signup(e) {\n    e.preventDefault();\n    handleform();\n  }\n\n  function Valid_signin(e) {\n    e.preventDefault();\n\n    _handleTest();\n  }\n\n  function _handleTest() {\n    axios.post(URL + 'signin', {\n      id: document.signin.id.value,\n      pwd: document.signin.pwd.value\n    }).then(res => {\n      if (res.data) {\n        let id = document.signin.id.value;\n        dispatch(acc_signin(1));\n        dispatch(ui_nav(0));\n        dispatch(acc_user(id));\n      } else {\n        alert('ID or password information is wrong.');\n      }\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"body-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-account-part\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-account-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    name: \"signin\",\n    onSubmit: Valid_signin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-acc-idtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"E-MAIL :\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"body-account-id\",\n    name: \"id\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-pwdtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"PWD :\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"body-account-pwd\",\n    name: \"pwd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"body-acc-inup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"SIGN_IN_NOW\"))), React.createElement(\"div\", {\n    className: \"body-account-signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    name: \"signup\",\n    onSubmit: Valid_signup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-acc-idtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"E-MAIL :\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"body-account-id\",\n    name: \"id\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-nametext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"NAME :\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"body-account-name\",\n    name: \"name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-pwdtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"PWD :\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"body-account-pwd\",\n    name: \"pwd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-repwdtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"RE_PWD :\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"body-account-pwd\",\n    name: \"repwd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-pntext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"P/N :\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"body-account-pn\",\n    name: \"pn\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"body-acc-inup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"SIGN_UP_NOW\")))));\n}\n\nexport default BodyAccount;","map":{"version":3,"sources":["/Users/dyobi/Desktop/camagru/src/components/body/account/index.jsx"],"names":["React","nodemailer","useDispatch","ui_nav","acc_signin","acc_signup","acc_user","acc_mail","axios","URL","BodyAccount","dispatch","transporter","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","error","info","console","log","handleform","document","signup","pwd","value","repwd","post","id","name","pn","then","res","data","split","alert","Valid_signup","e","preventDefault","Valid_signin","_handleTest","signin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport nodemailer from 'nodemailer';\nimport { useDispatch } from 'react-redux';\nimport { ui_nav, acc_signin, acc_signup, acc_user, acc_mail } from '../../../actions';\nimport './index.css';\n\nimport axios from 'axios';\nimport { URL } from '../../../const';\n\nfunction BodyAccount () {\n    const dispatch = useDispatch();\n\n    const transporter = nodemailer.createTransport({\n        service: 'gmail',\n        auth: {\n            user: '42sv.camagru@gmail.com',\n            pass: 'gusdk314'\n        }\n    });\n\n    const mailOptions = {\n        from: '42sv.camagru@gmail.com',\n        to: `document.sign_in.id.value`,\n        subject: 'Please confirm this for camagru )',\n        text: 'That was easy!'\n    };\n\n    transporter.sendMail(mailOptions, function(error, info){\n        if (error) {\n            console.log(error);\n        }\n    });\n\n    function handleform() {\n        if (document.signup.pwd.value === document.signup.repwd.value) {\n            axios.post(URL + 'signup', {\n                id: document.signup.id.value,\n                pwd: document.signup.pwd.value,\n                name: document.signup.name.value,\n                pn: document.signup.pn.value\n            })\n            .then(res => {\n                console.log(res);\n                if (res.data) {\n                    dispatch(acc_mail(document.signup.id.value.split('@')[1]));\n                    dispatch(acc_signup(1));\n                }\n                else {\n                    alert('E-mail has already existed !');\n                }\n            })\n        } else {\n            alert('Password is not matched !');\n        }\n    }\n\n    function Valid_signup (e) {\n        e.preventDefault();\n        handleform();\n    }\n\n    function Valid_signin (e) {\n        e.preventDefault();\n        _handleTest();\n    }\n\n    function _handleTest() {\n        axios.post(URL + 'signin', {\n            id: document.signin.id.value,\n            pwd: document.signin.pwd.value\n        })\n        .then(res => {\n            if(res.data) {\n                let id = document.signin.id.value;\n                dispatch(acc_signin(1));\n                dispatch(ui_nav(0));\n                dispatch(acc_user(id));\n            } else {\n                alert('ID or password information is wrong.');\n            }\n        });\n    }\n\n    return (\n        <div className=\"body-account\">\n            <div className=\"body-account-part\">\n                <div className=\"body-account-signin\">\n                    <form name=\"signin\" onSubmit={Valid_signin}>\n                        <div className=\"body-acc-idtext\">E-MAIL :</div>\n                        <input type=\"email\" className=\"body-account-id\" name=\"id\" required/>\n                        <div className=\"body-acc-pwdtext\">PWD :</div>\n                        <input type=\"password\" className=\"body-account-pwd\" name=\"pwd\" required/>\n                        <button className=\"body-acc-inup\">SIGN_IN_NOW</button>\n                    </form>\n                </div>\n                <div className=\"body-account-signup\">\n                    <form name=\"signup\" onSubmit={Valid_signup}>\n                        <div className=\"body-acc-idtext\">E-MAIL :</div>\n                        <input type=\"email\" className=\"body-account-id\" name=\"id\" required/>\n                        <div className=\"body-acc-nametext\">NAME :</div>\n                        <input type=\"text\" className=\"body-account-name\" name=\"name\" required/>\n                        <div className=\"body-acc-pwdtext\">PWD :</div>\n                        <input type=\"password\" className=\"body-account-pwd\" name=\"pwd\" required/>\n                        <div className=\"body-acc-repwdtext\">RE_PWD :</div>\n                        <input type=\"password\" className=\"body-account-pwd\" name=\"repwd\" required/>\n                        <div className=\"body-acc-pntext\">P/N :</div>\n                        <input type=\"text\" className=\"body-account-pn\" name=\"pn\" required/>\n                        <button className=\"body-acc-inup\">SIGN_UP_NOW</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BodyAccount;"]},"metadata":{},"sourceType":"module"}