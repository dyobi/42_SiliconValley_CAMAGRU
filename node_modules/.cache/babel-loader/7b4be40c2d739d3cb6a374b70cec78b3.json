{"ast":null,"code":"var _jsxFileName = \"/Users/dyobi/Desktop/camagru/src/components/body/account/index.jsx\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ui_nav, acc_signin, acc_signup, acc_user, acc_mail } from '../../../actions';\nimport './index.css';\nimport axios from 'axios';\n\nfunction BodyAccount() {\n  const dispatch = useDispatch();\n\n  function handleform() {\n    function fn_pw_check(pw, pw2, id) {\n      let pw_passed = true;\n      let pattern1 = /[0-9]/;\n      let pattern2 = /[a-zA-Z]/;\n      let pattern3 = /[~!@#$%<>^&*]/; // 원하는 특수문자 추가 제거\n\n      if (pw !== pw2) {\n        alert(\"Password doesn't match\");\n        return false;\n      }\n\n      if (!pattern1.test(pw) || !pattern2.test(pw) || !pattern3.test(pw) || pw.length < 8 || pw.length > 50) {\n        alert(\"Password should contain [English, Digit, Special character, At least 8 char].\");\n        return false;\n      }\n\n      if (pw.indexOf(id) > -1) {\n        alert(\"Password should not contain id.\");\n        return false;\n      }\n\n      var SamePass_0 = 0; //동일문자 카운트\n\n      var SamePass_1 = 0; //연속성(+) 카운드\n\n      var SamePass_2 = 0; //연속성(-) 카운드\n\n      for (var i = 0; i < pw.length; i++) {\n        var chr_pass_0;\n        var chr_pass_1;\n        var chr_pass_2;\n\n        if (i >= 2) {\n          chr_pass_0 = pw.charCodeAt(i - 2);\n          chr_pass_1 = pw.charCodeAt(i - 1);\n          chr_pass_2 = pw.charCodeAt(i); //동일문자 카운트\n\n          if (chr_pass_0 === chr_pass_1 && chr_pass_1 === chr_pass_2) {\n            SamePass_0++;\n          } else {\n            SamePass_0 = 0;\n          } //연속성(+) 카운드\n\n\n          if (chr_pass_0 - chr_pass_1 === 1 && chr_pass_1 - chr_pass_2 === 1) {\n            SamePass_1++;\n          } else {\n            SamePass_1 = 0;\n          } //연속성(-) 카운드\n\n\n          if (chr_pass_0 - chr_pass_1 === -1 && chr_pass_1 - chr_pass_2 === -1) {\n            SamePass_2++;\n          } else {\n            SamePass_2 = 0;\n          }\n        }\n\n        if (SamePass_0 > 0) {\n          alert(\"Password should not contain const 3 words or so.\");\n          pw_passed = false;\n        }\n\n        if (SamePass_1 > 0 || SamePass_2 > 0) {\n          alert(\"Password should not contain const 3 words or so.\");\n          pw_passed = false;\n        }\n\n        if (!pw_passed) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (fn_pw_check(document.signup.pwd.value, document.signup.repwd.value, document.signup.id.value) === true) {\n      axios.post('/signup', {\n        id: document.signup.id.value,\n        pwd: document.signup.pwd.value,\n        name: document.signup.name.value,\n        pn: document.signup.pn.value\n      }).then(res => {\n        console.log(res);\n\n        if (res.data) {\n          dispatch(acc_mail(document.signup.id.value.split('@')[1]));\n          dispatch(acc_signup(1));\n        } else {\n          alert('E-mail has already existed !');\n        }\n      });\n    }\n  }\n\n  function Valid_signup(e) {\n    e.preventDefault();\n    handleform();\n  }\n\n  function Valid_signin(e) {\n    e.preventDefault();\n\n    _handleTest();\n  }\n\n  function _handleTest() {\n    axios.post('/signin', {\n      id: document.signin.id.value,\n      pwd: document.signin.pwd.value\n    }).then(res => {\n      if (res.data && res.data !== 11) {\n        let id = document.signin.id.value;\n        dispatch(acc_user(id));\n        dispatch(acc_signin(1));\n        dispatch(ui_nav(0));\n      } else if (res.data === 11) {\n        alert('Session is expired !');\n        dispatch(ui_nav(3));\n        dispatch(acc_user(''));\n        dispatch(acc_signin(0));\n      } else {\n        alert('ID or password is wrong.');\n      }\n    });\n  }\n\n  function handle_forgot() {\n    let id = document.getElementById(forgot);\n    console.log(id);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"body-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-account-part\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-account-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    name: \"signin\",\n    onSubmit: Valid_signin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-acc-idtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"E-MAIL :\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"body-account-id\",\n    name: \"id\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-pwdtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"PWD :\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"body-account-pwd\",\n    name: \"pwd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"body-acc-inup1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"SIGN_IN_NOW\")), React.createElement(\"div\", {\n    className: \"body-acc-idtext1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"E-MAIL :\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"body-account-id1\",\n    name: \"forgot\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-inup2\",\n    onClick: () => handle_forgot(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"FORGOT PASSWORD\")), React.createElement(\"div\", {\n    className: \"body-account-signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    name: \"signup\",\n    onSubmit: Valid_signup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-acc-idtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"E-MAIL :\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"body-account-id\",\n    name: \"id\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-nametext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"NAME :\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"body-account-name\",\n    name: \"name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-pwdtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"PWD :\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"body-account-pwd\",\n    name: \"pwd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-repwdtext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"RE_PWD :\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"body-account-pwd\",\n    name: \"repwd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-acc-pntext\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"P/N :\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"body-account-pn\",\n    name: \"pn\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"body-acc-inup2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"SIGN_UP_NOW\")))));\n}\n\nexport default BodyAccount;","map":{"version":3,"sources":["/Users/dyobi/Desktop/camagru/src/components/body/account/index.jsx"],"names":["React","useDispatch","ui_nav","acc_signin","acc_signup","acc_user","acc_mail","axios","BodyAccount","dispatch","handleform","fn_pw_check","pw","pw2","id","pw_passed","pattern1","pattern2","pattern3","alert","test","length","indexOf","SamePass_0","SamePass_1","SamePass_2","i","chr_pass_0","chr_pass_1","chr_pass_2","charCodeAt","document","signup","pwd","value","repwd","post","name","pn","then","res","console","log","data","split","Valid_signup","e","preventDefault","Valid_signin","_handleTest","signin","handle_forgot","getElementById","forgot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ui_nav, acc_signin, acc_signup, acc_user, acc_mail } from '../../../actions';\nimport './index.css';\n\nimport axios from 'axios';\n\nfunction BodyAccount () {\n    const dispatch = useDispatch();\n\n    function handleform() {\n        \n        function fn_pw_check(pw, pw2, id) {\n\n            let pw_passed = true;    \n            let pattern1 = /[0-9]/;\n            let pattern2 = /[a-zA-Z]/;\n            let pattern3 = /[~!@#$%<>^&*]/;     // 원하는 특수문자 추가 제거\n\n            if(pw !== pw2) {\n                    alert(\"Password doesn't match\");\n                    return false;\n            }\n           if(!pattern1.test(pw)||!pattern2.test(pw)||!pattern3.test(pw)||pw.length<8||pw.length>50){\n                alert(\"Password should contain [English, Digit, Special character, At least 8 char].\");\n                return false;\n            }          \n            if(pw.indexOf(id) > -1) {\n                alert(\"Password should not contain id.\");\n                return false;\n            }\n            var SamePass_0 = 0; //동일문자 카운트\n            var SamePass_1 = 0; //연속성(+) 카운드\n            var SamePass_2 = 0; //연속성(-) 카운드\n            for(var i=0; i < pw.length; i++) {\n                 var chr_pass_0;\n                 var chr_pass_1;\n                 var chr_pass_2;\n                 if(i >= 2) {\n                     chr_pass_0 = pw.charCodeAt(i-2);\n                     chr_pass_1 = pw.charCodeAt(i-1);\n                     chr_pass_2 = pw.charCodeAt(i);\n                      //동일문자 카운트\n                     if((chr_pass_0 === chr_pass_1) && (chr_pass_1 === chr_pass_2)) {\n                        SamePass_0++;\n                      } \n                      else {\n                       SamePass_0 = 0;\n                       }\n                      //연속성(+) 카운드\n                     if(chr_pass_0 - chr_pass_1 === 1 && chr_pass_1 - chr_pass_2 === 1) {\n                         SamePass_1++;\n                      }\n                      else {\n                       SamePass_1 = 0;\n                      }\n                      //연속성(-) 카운드\n                     if(chr_pass_0 - chr_pass_1 === -1 && chr_pass_1 - chr_pass_2 === -1) {\n                         SamePass_2++;\n                      } \n                      else {\n                       SamePass_2 = 0;\n                      }  \n                 }     \n                if(SamePass_0 > 0) {\n                   alert(\"Password should not contain const 3 words or so.\");\n                   pw_passed=false;\n                 } \n                if(SamePass_1 > 0 || SamePass_2 > 0 ) {\n                   alert(\"Password should not contain const 3 words or so.\");\n                   pw_passed=false;\n                 }\n                    if(!pw_passed) {\n                      return false;\n                }\n            }\n            return true;\n        }\n        if (fn_pw_check(document.signup.pwd.value, document.signup.repwd.value, document.signup.id.value) === true) {\n            axios.post('/signup', {\n                id: document.signup.id.value,\n                pwd: document.signup.pwd.value,\n                name: document.signup.name.value,\n                pn: document.signup.pn.value\n            })\n            .then(res => {\n                console.log(res);\n                if (res.data) {\n                    dispatch(acc_mail(document.signup.id.value.split('@')[1]));\n                    dispatch(acc_signup(1));\n                }\n                else {\n                    alert('E-mail has already existed !');\n                }\n            })\n        }\n    }\n\n    function Valid_signup (e) {\n        e.preventDefault();\n        handleform();\n    }\n\n    function Valid_signin (e) {\n        e.preventDefault();\n        _handleTest();\n    }\n\n    function _handleTest() {\n        axios.post('/signin', {\n            id: document.signin.id.value,\n            pwd: document.signin.pwd.value\n        })\n        .then(res => {\n            if(res.data && res.data !== 11) {\n                let id = document.signin.id.value;\n                dispatch(acc_user(id));\n                dispatch(acc_signin(1));\n                dispatch(ui_nav(0));\n            } else if (res.data === 11) {\n                alert('Session is expired !');\n                dispatch(ui_nav(3));\n                dispatch(acc_user(''));\n                dispatch(acc_signin(0));\n            } else {\n                alert('ID or password is wrong.');\n            }\n        });\n    }\n\n    function handle_forgot() {\n        let id = document.getElementById(forgot);\n        console.log(id);\n    }\n\n    return (\n        <div className=\"body-account\">\n            <div className=\"body-account-part\">\n                <div className=\"body-account-signin\">\n                    <form name=\"signin\" onSubmit={Valid_signin}>\n                        <div className=\"body-acc-idtext\">E-MAIL :</div>\n                        <input type=\"email\" className=\"body-account-id\" name=\"id\" required/>\n                        <div className=\"body-acc-pwdtext\">PWD :</div>\n                        <input type=\"password\" className=\"body-account-pwd\" name=\"pwd\" required/>\n                        <button className=\"body-acc-inup1\">SIGN_IN_NOW</button>\n                    </form>\n                    <div className=\"body-acc-idtext1\">E-MAIL :</div>\n                    <input type=\"email\" className=\"body-account-id1\" name=\"forgot\" required/>\n                    <div className=\"body-acc-inup2\" onClick={() => handle_forgot()}>FORGOT PASSWORD</div>\n                </div>\n                <div className=\"body-account-signup\">\n                    <form name=\"signup\" onSubmit={Valid_signup}>\n                        <div className=\"body-acc-idtext\">E-MAIL :</div>\n                        <input type=\"email\" className=\"body-account-id\" name=\"id\" required/>\n                        <div className=\"body-acc-nametext\">NAME :</div>\n                        <input type=\"text\" className=\"body-account-name\" name=\"name\" required/>\n                        <div className=\"body-acc-pwdtext\">PWD :</div>\n                        <input type=\"password\" className=\"body-account-pwd\" name=\"pwd\" required/>\n                        <div className=\"body-acc-repwdtext\">RE_PWD :</div>\n                        <input type=\"password\" className=\"body-account-pwd\" name=\"repwd\" required/>\n                        <div className=\"body-acc-pntext\">P/N :</div>\n                        <input type=\"text\" className=\"body-account-pn\" name=\"pn\" required/>\n                        <button className=\"body-acc-inup2\">SIGN_UP_NOW</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BodyAccount;"]},"metadata":{},"sourceType":"module"}