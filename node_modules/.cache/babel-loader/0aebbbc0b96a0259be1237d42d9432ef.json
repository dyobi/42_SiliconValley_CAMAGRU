{"ast":null,"code":"var _jsxFileName = \"/Users/dyobi/Desktop/camagru/src/components/body/album/index.jsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoComment, GoHeart } from \"react-icons/go\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { album_arr, album_comment, ui_nav, album_view_id } from '../../../actions';\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\nimport './index.css';\nimport axios from 'axios';\nimport { URL } from '../../../const';\n\nfunction BodyAlbum() {\n  const dispatch = useDispatch();\n  let album = useSelector(state => state.album);\n  let acc = useSelector(state => state.acc);\n\n  function One_del(e) {\n    axios.post(URL + 'pic_del', {\n      pic: e,\n      user: acc.user\n    }).then(res => {\n      if (res.data) {\n        alert('Successfully Deleted !');\n\n        _handleAlbum();\n      } else {\n        alert('You are not allowed to delete this pic !');\n      }\n    });\n  }\n\n  function _handleAlbum() {\n    axios.post(URL + 'picture', {\n      user: acc.user\n    }).then(res => {\n      dispatch(album_arr(res.data));\n    });\n  }\n\n  function _like(e) {\n    if (acc.user !== '') {\n      axios.post(URL + 'like', {\n        id: acc.user,\n        pic: e\n      }).then(res => {\n        _handleAlbum();\n      });\n    } else {\n      alert('Log in first !');\n      dispatch(ui_nav(3));\n    }\n  }\n\n  function _comment(index) {\n    if (album.view_id === index) {\n      dispatch(album_view_id(-1));\n    } else {\n      dispatch(album_view_id(index));\n    } // axios.post(URL + 'view_comment', {\n    //     pic: e\n    // }).then(res => {\n    //     _displayComment(e, index)\n    //     _handleAlbum();\n    // })\n\n  }\n\n  function Comment_push(e) {\n    if (acc.user === '') {\n      alert('Log in first !');\n      dispatch(ui_nav(3));\n    } else if (document.getElementById('post_comment').textContent === '') {\n      console.log('Nothing');\n    } else {\n      axios.post(URL + 'comment_push', {\n        text: document.getElementById('post_comment').textContent,\n        user: acc.user,\n        pic: e\n      }).then(res => {\n        _handleAlbum();\n      });\n    }\n  } // function _displayComment(e, index) {\n  //     let rr = [];\n  //     let tmp = [];\n  //     axios.post(URL + 'display_comment', {\n  //         pic: e\n  //     })\n  //     .then(res => {\n  //         for (let i = 0; i < res.data.length; i++) {\n  //             tmp[i] = res.data[i].name + ' : ' + res.data[i].text;\n  //         }\n  //         rr = album.arr;\n  //         rr[index] = (Object.assign({tmp}, album.arr[index]))\n  //         dispatch(album_arr(rr));\n  //     })\n  // }\n\n\n  return React.createElement(\"div\", {\n    className: \"body-album\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-album-part\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, album.arr.map((each, index) => React.createElement(\"div\", {\n    className: \"body-album-each\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body-album-pic\",\n    style: {\n      backgroundImage: 'url(\\'data:image/jpeg;base64,' + each.temp + '\\')'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), each.is_like === null ? React.createElement(GoHeart, {\n    className: \"body-album-ft-1\",\n    onClick: () => _like(each.pic),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(GoHeart, {\n    className: \"body-album-ft-1-1\",\n    onClick: () => _like(each.pic),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), each.display === 0 ? React.createElement(GoComment, {\n    className: \"body-album-ft-2\",\n    onClick: () => _comment(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }) : React.createElement(GoComment, {\n    className: \"body-album-ft-2-1\",\n    onClick: () => _comment(each.pic, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-album-postid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, each.name), React.createElement(IoIosCloseCircleOutline, {\n    className: \"body-album-ft2\",\n    onClick: () => One_del(each.pic),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"count_like\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, each.count, \" Likes\"), React.createElement(\"div\", {\n    className: \"count_comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, each.count_text, \" Comments\"), each.display === 0 ? React.createElement(\"div\", {\n    className: \"body-album-comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, each.explain) : '', index === album.view_id ? React.createElement(\"div\", {\n    className: \"body-album-comment-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, each.count_text === 0 ? React.createElement(\"div\", {\n    className: \"ba-comment-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"No comments yet\") : React.createElement(\"div\", {\n    id: 'ba-comment-top-' + index,\n    className: \"ba-comment-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, each.comments.map((contents, idx) => React.createElement(\"div\", {\n    className: \"each_comment\",\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, contents.name, \" : \", contents.text))), React.createElement(\"div\", {\n    type: \"text\",\n    className: \"ba-comment-btm\",\n    contentEditable: \"true\",\n    id: \"post_comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(IoIosAddCircleOutline, {\n    className: \"ba-comment-send\",\n    onClick: () => Comment_push(each.pic),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })) : ''))));\n}\n\nexport default BodyAlbum;\n/*\n\n{each.display === 1 && each.count_text !== 0 ?  \n                            <div className=\"body-album-comment-1\">\n                                <div className=\"ba-comment-top\">{each.comments.map((contents, idx) => \n                                    <div className=\"each_comment\" key={idx}>{contents.name} : {contents.text}</div>\n                                )}</div>\n                                <div type=\"text\" className=\"ba-comment-btm\" contentEditable=\"true\" id=\"post_comment\" />\n                                <IoIosAddCircleOutline className=\"ba-comment-send\" onClick={() => Comment_push(each.pic)} />\n                            </div> : ''\n                        }\n\n                        */","map":{"version":3,"sources":["/Users/dyobi/Desktop/camagru/src/components/body/album/index.jsx"],"names":["React","useSelector","useDispatch","GoComment","GoHeart","IoIosCloseCircleOutline","album_arr","album_comment","ui_nav","album_view_id","IoIosAddCircleOutline","axios","URL","BodyAlbum","dispatch","album","state","acc","One_del","e","post","pic","user","then","res","data","alert","_handleAlbum","_like","id","_comment","index","view_id","Comment_push","document","getElementById","textContent","console","log","text","arr","map","each","backgroundImage","temp","is_like","display","name","count","count_text","explain","comments","contents","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoComment, GoHeart } from \"react-icons/go\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { album_arr, album_comment, ui_nav, album_view_id } from '../../../actions';\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\n\n\nimport './index.css';\n\nimport axios from 'axios';\nimport { URL } from '../../../const';\n\nfunction BodyAlbum () {\n    const dispatch = useDispatch();\n    let album = useSelector(state => state.album);\n    let acc = useSelector(state => state.acc);\n\n    function One_del (e) {\n        axios.post(URL + 'pic_del', {\n            pic: e,\n            user: acc.user\n        })\n        .then(res => {\n            if (res.data) {\n                alert('Successfully Deleted !');\n                _handleAlbum();\n            }\n            else {\n                alert('You are not allowed to delete this pic !');\n            }\n        })\n    }\n\n    function _handleAlbum() {\n        axios.post(URL + 'picture', {\n            user: acc.user\n        })\n        .then(res => {\n            dispatch(album_arr(res.data));\n        });\n    }\n\n    function _like(e) {\n        if (acc.user !== '') {\n            axios.post(URL + 'like', {\n                id: acc.user,\n                pic: e\n            })\n            .then(res => {\n                _handleAlbum();\n            })\n        }\n        else {\n            alert('Log in first !');\n            dispatch(ui_nav(3));\n        }\n    }\n\n    function _comment(index) {\n        if (album.view_id === index) {\n            dispatch(album_view_id(-1));\n        } else {\n            dispatch(album_view_id(index));\n        }\n        // axios.post(URL + 'view_comment', {\n        //     pic: e\n        // }).then(res => {\n        //     _displayComment(e, index)\n        //     _handleAlbum();\n        // })\n    }\n\n    function Comment_push(e) {\n        if (acc.user === '') {\n            alert('Log in first !');\n            dispatch(ui_nav(3));\n        } else if (document.getElementById('post_comment').textContent === '') {\n            console.log('Nothing')\n        } else {\n            axios.post(URL + 'comment_push', {\n                text: document.getElementById('post_comment').textContent,\n                user: acc.user,\n                pic: e\n            })\n            .then(res => {\n                _handleAlbum();\n            })\n        }\n    }\n\n    // function _displayComment(e, index) {\n    //     let rr = [];\n    //     let tmp = [];\n\n    //     axios.post(URL + 'display_comment', {\n    //         pic: e\n    //     })\n    //     .then(res => {\n    //         for (let i = 0; i < res.data.length; i++) {\n    //             tmp[i] = res.data[i].name + ' : ' + res.data[i].text;\n    //         }\n    //         rr = album.arr;\n    //         rr[index] = (Object.assign({tmp}, album.arr[index]))\n    //         dispatch(album_arr(rr));\n    //     })\n    // }\n\n    return (\n        <div className=\"body-album\">\n            <div className=\"body-album-part\">\n                { album.arr.map((each, index) =>\n                    <div className=\"body-album-each\" key={index} >\n                        <div className=\"body-album-pic\" style={{ backgroundImage: 'url(\\'data:image/jpeg;base64,' + each.temp + '\\')' }} />\n                        {each.is_like === null ? <GoHeart className=\"body-album-ft-1\" onClick={() => _like(each.pic)} /> : <GoHeart className=\"body-album-ft-1-1\" onClick={() => _like(each.pic)} />}\n                        {each.display === 0 ? <GoComment className=\"body-album-ft-2\" onClick={() => _comment(index)} /> : <GoComment className=\"body-album-ft-2-1\" onClick={() => _comment(each.pic, index)} />}\n                        <div className=\"body-album-postid\">{each.name}</div>\n                        <IoIosCloseCircleOutline className=\"body-album-ft2\" onClick={() => One_del(each.pic)} />\n                        <div className=\"count_like\">{each.count} Likes</div>\n                        <div className=\"count_comment\">{each.count_text} Comments</div>\n                        {each.display === 0 ? <div className=\"body-album-comment\">{each.explain}</div> : ''}\n                        {index === album.view_id ?\n                            <div className=\"body-album-comment-1\">\n                                {each.count_text === 0 \n                                    ? \n                                    <div className=\"ba-comment-top\">No comments yet</div>\n                                    :\n                                    <div id={'ba-comment-top-' + index} className=\"ba-comment-top\">\n                                        {each.comments.map((contents, idx) => \n                                            <div className=\"each_comment\" key={idx}>{contents.name} : {contents.text}</div>\n                                        )}\n                                    </div>\n                                }\n                                <div type=\"text\" className=\"ba-comment-btm\" contentEditable=\"true\" id=\"post_comment\" />\n                                <IoIosAddCircleOutline className=\"ba-comment-send\" onClick={() => Comment_push(each.pic)} />\n                            </div>\n                        : '' }\n                    </div>\n                )} \n            </div>\n        </div>\n    );\n}\n\nexport default BodyAlbum;\n\n/*\n\n{each.display === 1 && each.count_text !== 0 ?  \n                            <div className=\"body-album-comment-1\">\n                                <div className=\"ba-comment-top\">{each.comments.map((contents, idx) => \n                                    <div className=\"each_comment\" key={idx}>{contents.name} : {contents.text}</div>\n                                )}</div>\n                                <div type=\"text\" className=\"ba-comment-btm\" contentEditable=\"true\" id=\"post_comment\" />\n                                <IoIosAddCircleOutline className=\"ba-comment-send\" onClick={() => Comment_push(each.pic)} />\n                            </div> : ''\n                        }\n\n                        */"]},"metadata":{},"sourceType":"module"}